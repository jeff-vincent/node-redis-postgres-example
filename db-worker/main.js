const Koa = require("koa");
const app = new Koa();
const Router = require("koa-router");
const router = new Router();
const { createClient } = require('redis');
const { Pool } = require('pg')

const redisClient = createClient();
redisClient.on('error', err => console.log('Redis Client Error', err));


const config = {
  user: 'postgres',
  host: '0.0.0.0',
  password: 'postgres',
  database: 'my_database'
};
const pool = new Pool(config);

pool.connect((err, client, release) => {
  if (err) {
    return console.error('Error acquiring client', err.stack)
  };
  client.query('SELECT NOW()', (err, result) => {
    release()
    if (err) {
      return console.error('Error executing query', err.stack)
    };
    console.log(result.rows)
  })
});

async function readFromRedis(ctx) {
  await redisClient.connect();
  const value = await redisClient.blPop('queue', 10, (err, reply) => {
    console.log(reply)});
  await redisClient.disconnect();
  return value;
};

async function createDatabase() {
  const database = 'my_database';
  pool.connect((err, client, release) => {
    if (err) {
        console.log("Can not connect to the DB " + err);
    }
    client.query(`CREATE DATABASE ${database};`, (err, result) => {
      release()
      if (err) {
        return console.error('Error executing query', err.stack)
         };
        }
      )
    }
  )
};

async function createDBTable() {
  const table = 'example';
  pool.connect((err, client, release) => {
    if (err) {
        console.log("Can not connect to the DB " + err);
    };
    client.query(`CREATE TABLE ${table} (
      did    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      example_value   varchar(40) NOT NULL CHECK (example_value <> '')); `, (err, result) => {
      release()
      if (err) {
        return console.error('Error executing query', err.stack)
         };
        }
      );
    }
  );
};

async function writeToDB(value){
  const text = 'INSERT INTO example(example_value) VALUES($1) RETURNING *'
  const values = [value]
  pool.connect((err, client, release) => {
    if (err) {
        console.log("Can not connect to the DB " + err);
    };
     client.query(text, values, (err, res) => {
    release()
    if (err) {
      console.log(err.stack)
    } else {
      console.log(res.rows[0])
    }
  })
})};

async function main() {
  while(true) {
    value = await readFromRedis()
    console.log(value)
    if (value !== null) {
      console.log(value.element)
      await writeToDB(value.element)
    };
  };
};

createDatabase()
createDBTable()
main()